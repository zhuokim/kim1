{"ast":null,"code":"var _jsxFileName = \"/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport Card from './Card';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PREVIEW_DURATION = 5; // 预览时间（秒）\n\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null\n  });\n  const [isPreview, setIsPreview] = useState(true);\n  const [previewCountdown, setPreviewCountdown] = useState(PREVIEW_DURATION);\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: true,\n        // 初始状态设为翻开\n        isMatched: false\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: true,\n        // 初始状态设为翻开\n        isMatched: false\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: null,\n      // 预览阶段不开始计时\n      endTime: null\n    });\n    setIsPreview(true);\n    setPreviewCountdown(PREVIEW_DURATION);\n  };\n\n  // 处理预览倒计时\n  useEffect(() => {\n    if (isPreview && previewCountdown > 0) {\n      const timer = setInterval(() => {\n        setPreviewCountdown(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n    if (isPreview && previewCountdown === 0) {\n      // 预览结束，将所有卡片翻回去，开始游戏\n      setIsPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        cards: prev.cards.map(card => ({\n          ...card,\n          isFlipped: false\n        })),\n        startTime: Date.now() // 开始计时\n      }));\n    }\n  }, [isPreview, previewCountdown]);\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  const handleCardClick = clickedCard => {\n    if (isPreview ||\n    // 预览阶段不允许点击\n    gameState.flippedCards.length === 2 || clickedCard.isFlipped || clickedCard.isMatched) {\n      return;\n    }\n    const newCards = gameState.cards.map(card => card.id === clickedCard.id ? {\n      ...card,\n      isFlipped: true\n    } : card);\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n    setGameState(prev => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards\n    }));\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && firstCard.type !== secondCard.type;\n      if (isMatch) {\n        const matchedCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n          ...card,\n          isMatched: true\n        } : card);\n        const isGameComplete = matchedCards.every(card => card.isMatched);\n        setGameState(prev => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime: isGameComplete ? Date.now() : null\n        }));\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n            ...card,\n            isFlipped: false\n          } : card);\n          setGameState(prev => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: []\n          }));\n        }, 1000);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [!isPreview && /*#__PURE__*/_jsxDEV(Timer, {\n          startTime: gameState.startTime,\n          endTime: gameState.endTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), isPreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: [\"\\u9884\\u89C8\\u65F6\\u95F4\\uFF1A\", previewCountdown, \" \\u79D2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initializeGame,\n          className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-colors duration-200 transform hover:scale-105 focus:outline-none  focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\",\n          children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\",\n        children: gameState.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onClick: () => handleCardClick(card)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), gameState.isGameComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-bold mb-4 text-blue-600\",\n            children: \"\\u606D\\u559C\\u4F60\\u5B8C\\u6210\\u6E38\\u620F\\uFF01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-6 text-gray-700\",\n            children: [\"\\u7528\\u65F6\\uFF1A\", Math.floor((gameState.endTime - gameState.startTime) / 1000), \" \\u79D2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: initializeGame,\n            className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-all duration-200 transform hover:scale-105\",\n            children: \"\\u518D\\u73A9\\u4E00\\u6B21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"hfkFFkg5uc+PuzlE0EVpUIyLw6E=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","getRandomWords","Card","Timer","jsxDEV","_jsxDEV","PREVIEW_DURATION","Game","_s","gameState","setGameState","cards","flippedCards","isGameComplete","startTime","endTime","isPreview","setIsPreview","previewCountdown","setPreviewCountdown","initializeGame","selectedWords","forEach","word","index","push","id","content","english","type","pairId","isFlipped","isMatched","chinese","shuffledCards","sort","Math","random","timer","setInterval","prev","clearInterval","map","card","Date","now","handleCardClick","clickedCard","length","newCards","newFlippedCards","firstCard","secondCard","isMatch","matchedCards","every","setTimeout","resetCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","floor","_c","$RefreshReg$"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport { Card as CardType, GameState } from '../types';\nimport Card from './Card';\nimport Timer from './Timer';\n\nconst PREVIEW_DURATION = 5; // 预览时间（秒）\n\nconst Game: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null,\n  });\n  const [isPreview, setIsPreview] = useState(true);\n  const [previewCountdown, setPreviewCountdown] = useState(PREVIEW_DURATION);\n\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards: CardType[] = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: true, // 初始状态设为翻开\n        isMatched: false,\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: true, // 初始状态设为翻开\n        isMatched: false,\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: null, // 预览阶段不开始计时\n      endTime: null,\n    });\n    setIsPreview(true);\n    setPreviewCountdown(PREVIEW_DURATION);\n  };\n\n  // 处理预览倒计时\n  useEffect(() => {\n    if (isPreview && previewCountdown > 0) {\n      const timer = setInterval(() => {\n        setPreviewCountdown(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n\n    if (isPreview && previewCountdown === 0) {\n      // 预览结束，将所有卡片翻回去，开始游戏\n      setIsPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        cards: prev.cards.map(card => ({ ...card, isFlipped: false })),\n        startTime: Date.now(), // 开始计时\n      }));\n    }\n  }, [isPreview, previewCountdown]);\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const handleCardClick = (clickedCard: CardType) => {\n    if (\n      isPreview || // 预览阶段不允许点击\n      gameState.flippedCards.length === 2 ||\n      clickedCard.isFlipped ||\n      clickedCard.isMatched\n    ) {\n      return;\n    }\n\n    const newCards = gameState.cards.map((card) =>\n      card.id === clickedCard.id ? { ...card, isFlipped: true } : card\n    );\n\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n\n    setGameState((prev) => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards,\n    }));\n\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && \n                     firstCard.type !== secondCard.type;\n\n      if (isMatch) {\n        const matchedCards = newCards.map((card) =>\n          card.id === firstCard.id || card.id === secondCard.id\n            ? { ...card, isMatched: true }\n            : card\n        );\n\n        const isGameComplete = matchedCards.every((card) => card.isMatched);\n\n        setGameState((prev) => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime: isGameComplete ? Date.now() : null,\n        }));\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map((card) =>\n            card.id === firstCard.id || card.id === secondCard.id\n              ? { ...card, isFlipped: false }\n              : card\n          );\n\n          setGameState((prev) => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: [],\n          }));\n        }, 1000);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n          {!isPreview && (\n            <Timer\n              startTime={gameState.startTime}\n              endTime={gameState.endTime}\n            />\n          )}\n          {isPreview ? (\n            <div className=\"text-2xl font-bold text-blue-600\">\n              预览时间：{previewCountdown} 秒\n            </div>\n          ) : (\n            <button\n              onClick={initializeGame}\n              className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n                transition-colors duration-200 transform hover:scale-105 focus:outline-none \n                focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\"\n            >\n              重新开始\n            </button>\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n          {gameState.cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              onClick={() => handleCardClick(card)}\n            />\n          ))}\n        </div>\n\n        {gameState.isGameComplete && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\">\n              <h2 className=\"text-3xl font-bold mb-4 text-blue-600\">恭喜你完成游戏！</h2>\n              <p className=\"text-xl mb-6 text-gray-700\">\n                用时：{Math.floor((gameState.endTime! - gameState.startTime!) / 1000)} 秒\n              </p>\n              <button\n                onClick={initializeGame}\n                className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n                  transition-all duration-200 transform hover:scale-105\"\n              >\n                再玩一次\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}