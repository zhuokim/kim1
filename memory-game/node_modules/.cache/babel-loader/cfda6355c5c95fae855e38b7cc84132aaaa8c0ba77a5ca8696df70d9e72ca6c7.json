{"ast":null,"code":"import React,{useState,useEffect}from'react';import Game from'./components/Game';import GroupSelection from'./components/GroupSelection';import AdminLogin from'./components/AdminLogin';import AdminPanel from'./components/AdminPanel';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ADMIN_PASSWORD='337878';// Admin password\nconst SCORES_STORAGE_KEY='gameScores';const App=()=>{const[selectedGroup,setSelectedGroup]=useState(null);const[showAdminLogin,setShowAdminLogin]=useState(false);const[isAdmin,setIsAdmin]=useState(false);const[scores,setScores]=useState([]);// Load scores from localStorage\nconst loadScores=()=>{try{const savedScores=localStorage.getItem(SCORES_STORAGE_KEY);if(savedScores){const parsedScores=JSON.parse(savedScores);if(Array.isArray(parsedScores)){setScores(parsedScores);}else{console.error('Invalid scores data format');setScores([]);}}}catch(error){console.error('Error loading scores:',error);setScores([]);}};// Save scores to localStorage\nconst saveScores=updatedScores=>{try{localStorage.setItem(SCORES_STORAGE_KEY,JSON.stringify(updatedScores));setScores(updatedScores);}catch(error){console.error('Error saving scores:',error);}};useEffect(()=>{loadScores();},[]);const handleGroupSelect=group=>{setSelectedGroup(group);};const handleGameComplete=time=>{if(!selectedGroup)return;try{const newScore={group:selectedGroup,time,date:new Date().toISOString()};const updatedScores=[...scores,newScore];saveScores(updatedScores);setSelectedGroup(null);}catch(error){console.error('Error handling game completion:',error);}};const handleAdminLogin=password=>{if(password===ADMIN_PASSWORD){setIsAdmin(true);setShowAdminLogin(false);loadScores();}};const handleClearScores=()=>{try{localStorage.removeItem(SCORES_STORAGE_KEY);setScores([]);}catch(error){console.error('Error clearing scores:',error);}};const handleAdminLogout=()=>{setIsAdmin(false);};if(isAdmin){return/*#__PURE__*/_jsx(AdminPanel,{scores:scores,onClearScores:handleClearScores,onLogout:handleAdminLogout});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100\",children:[showAdminLogin&&/*#__PURE__*/_jsx(AdminLogin,{onLogin:handleAdminLogin,onCancel:()=>setShowAdminLogin(false)}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-blue-600\",children:\"Memory Card Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAdminLogin(true),className:\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800\",children:\"Admin\"})]}),!selectedGroup?/*#__PURE__*/_jsx(GroupSelection,{onSelect:handleGroupSelect}):/*#__PURE__*/_jsx(Game,{group:selectedGroup,onComplete:handleGameComplete})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Game","GroupSelection","AdminLogin","AdminPanel","jsx","_jsx","jsxs","_jsxs","ADMIN_PASSWORD","SCORES_STORAGE_KEY","App","selectedGroup","setSelectedGroup","showAdminLogin","setShowAdminLogin","isAdmin","setIsAdmin","scores","setScores","loadScores","savedScores","localStorage","getItem","parsedScores","JSON","parse","Array","isArray","console","error","saveScores","updatedScores","setItem","stringify","handleGroupSelect","group","handleGameComplete","time","newScore","date","Date","toISOString","handleAdminLogin","password","handleClearScores","removeItem","handleAdminLogout","onClearScores","onLogout","className","children","onLogin","onCancel","onClick","onSelect","onComplete"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Game from './components/Game';\nimport GroupSelection from './components/GroupSelection';\nimport AdminLogin from './components/AdminLogin';\nimport AdminPanel from './components/AdminPanel';\nimport { Score } from './types';\n\nconst ADMIN_PASSWORD = '337878'; // Admin password\nconst SCORES_STORAGE_KEY = 'gameScores';\n\nconst App: React.FC = () => {\n  const [selectedGroup, setSelectedGroup] = useState<number | null>(null);\n  const [showAdminLogin, setShowAdminLogin] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [scores, setScores] = useState<Score[]>([]);\n\n  // Load scores from localStorage\n  const loadScores = () => {\n    try {\n      const savedScores = localStorage.getItem(SCORES_STORAGE_KEY);\n      if (savedScores) {\n        const parsedScores = JSON.parse(savedScores);\n        if (Array.isArray(parsedScores)) {\n          setScores(parsedScores);\n        } else {\n          console.error('Invalid scores data format');\n          setScores([]);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading scores:', error);\n      setScores([]);\n    }\n  };\n\n  // Save scores to localStorage\n  const saveScores = (updatedScores: Score[]) => {\n    try {\n      localStorage.setItem(SCORES_STORAGE_KEY, JSON.stringify(updatedScores));\n      setScores(updatedScores);\n    } catch (error) {\n      console.error('Error saving scores:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadScores();\n  }, []);\n\n  const handleGroupSelect = (group: number) => {\n    setSelectedGroup(group);\n  };\n\n  const handleGameComplete = (time: number) => {\n    if (!selectedGroup) return;\n    \n    try {\n      const newScore: Score = {\n        group: selectedGroup,\n        time,\n        date: new Date().toISOString()\n      };\n      \n      const updatedScores = [...scores, newScore];\n      saveScores(updatedScores);\n      setSelectedGroup(null);\n    } catch (error) {\n      console.error('Error handling game completion:', error);\n    }\n  };\n\n  const handleAdminLogin = (password: string) => {\n    if (password === ADMIN_PASSWORD) {\n      setIsAdmin(true);\n      setShowAdminLogin(false);\n      loadScores();\n    }\n  };\n\n  const handleClearScores = () => {\n    try {\n      localStorage.removeItem(SCORES_STORAGE_KEY);\n      setScores([]);\n    } catch (error) {\n      console.error('Error clearing scores:', error);\n    }\n  };\n\n  const handleAdminLogout = () => {\n    setIsAdmin(false);\n  };\n\n  if (isAdmin) {\n    return (\n      <AdminPanel\n        scores={scores}\n        onClearScores={handleClearScores}\n        onLogout={handleAdminLogout}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {showAdminLogin && (\n        <AdminLogin\n          onLogin={handleAdminLogin}\n          onCancel={() => setShowAdminLogin(false)}\n        />\n      )}\n      \n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-blue-600\">Memory Card Game</h1>\n          <button\n            onClick={() => setShowAdminLogin(true)}\n            className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800\"\n          >\n            Admin\n          </button>\n        </div>\n\n        {!selectedGroup ? (\n          <GroupSelection onSelect={handleGroupSelect} />\n        ) : (\n          <Game\n            group={selectedGroup}\n            onComplete={handleGameComplete}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGjD,KAAM,CAAAC,cAAc,CAAG,QAAQ,CAAE;AACjC,KAAM,CAAAC,kBAAkB,CAAG,YAAY,CAEvC,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAgB,IAAI,CAAC,CACvE,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACmB,MAAM,CAAEC,SAAS,CAAC,CAAGpB,QAAQ,CAAU,EAAE,CAAC,CAEjD;AACA,KAAM,CAAAqB,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAACb,kBAAkB,CAAC,CAC5D,GAAIW,WAAW,CAAE,CACf,KAAM,CAAAG,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAC5C,GAAIM,KAAK,CAACC,OAAO,CAACJ,YAAY,CAAC,CAAE,CAC/BL,SAAS,CAACK,YAAY,CAAC,CACzB,CAAC,IAAM,CACLK,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC,CAC3CX,SAAS,CAAC,EAAE,CAAC,CACf,CACF,CACF,CAAE,MAAOW,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CX,SAAS,CAAC,EAAE,CAAC,CACf,CACF,CAAC,CAED;AACA,KAAM,CAAAY,UAAU,CAAIC,aAAsB,EAAK,CAC7C,GAAI,CACFV,YAAY,CAACW,OAAO,CAACvB,kBAAkB,CAAEe,IAAI,CAACS,SAAS,CAACF,aAAa,CAAC,CAAC,CACvEb,SAAS,CAACa,aAAa,CAAC,CAC1B,CAAE,MAAOF,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAED9B,SAAS,CAAC,IAAM,CACdoB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAe,iBAAiB,CAAIC,KAAa,EAAK,CAC3CvB,gBAAgB,CAACuB,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIC,IAAY,EAAK,CAC3C,GAAI,CAAC1B,aAAa,CAAE,OAEpB,GAAI,CACF,KAAM,CAAA2B,QAAe,CAAG,CACtBH,KAAK,CAAExB,aAAa,CACpB0B,IAAI,CACJE,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAV,aAAa,CAAG,CAAC,GAAGd,MAAM,CAAEqB,QAAQ,CAAC,CAC3CR,UAAU,CAACC,aAAa,CAAC,CACzBnB,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAE,MAAOiB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAED,KAAM,CAAAa,gBAAgB,CAAIC,QAAgB,EAAK,CAC7C,GAAIA,QAAQ,GAAKnC,cAAc,CAAE,CAC/BQ,UAAU,CAAC,IAAI,CAAC,CAChBF,iBAAiB,CAAC,KAAK,CAAC,CACxBK,UAAU,CAAC,CAAC,CACd,CACF,CAAC,CAED,KAAM,CAAAyB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAI,CACFvB,YAAY,CAACwB,UAAU,CAACpC,kBAAkB,CAAC,CAC3CS,SAAS,CAAC,EAAE,CAAC,CACf,CAAE,MAAOW,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAChD,CACF,CAAC,CAED,KAAM,CAAAiB,iBAAiB,CAAGA,CAAA,GAAM,CAC9B9B,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,GAAID,OAAO,CAAE,CACX,mBACEV,IAAA,CAACF,UAAU,EACTc,MAAM,CAAEA,MAAO,CACf8B,aAAa,CAAEH,iBAAkB,CACjCI,QAAQ,CAAEF,iBAAkB,CAC7B,CAAC,CAEN,CAEA,mBACEvC,KAAA,QAAK0C,SAAS,CAAC,0BAA0B,CAAAC,QAAA,EACtCrC,cAAc,eACbR,IAAA,CAACH,UAAU,EACTiD,OAAO,CAAET,gBAAiB,CAC1BU,QAAQ,CAAEA,CAAA,GAAMtC,iBAAiB,CAAC,KAAK,CAAE,CAC1C,CACF,cAEDP,KAAA,QAAK0C,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1C3C,KAAA,QAAK0C,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrD7C,IAAA,OAAI4C,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cACtE7C,IAAA,WACEgD,OAAO,CAAEA,CAAA,GAAMvC,iBAAiB,CAAC,IAAI,CAAE,CACvCmC,SAAS,CAAC,qDAAqD,CAAAC,QAAA,CAChE,OAED,CAAQ,CAAC,EACN,CAAC,CAEL,CAACvC,aAAa,cACbN,IAAA,CAACJ,cAAc,EAACqD,QAAQ,CAAEpB,iBAAkB,CAAE,CAAC,cAE/C7B,IAAA,CAACL,IAAI,EACHmC,KAAK,CAAExB,aAAc,CACrB4C,UAAU,CAAEnB,kBAAmB,CAChC,CACF,EACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}