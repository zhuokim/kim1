{"ast":null,"code":"var _jsxFileName = \"/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport Card from './Card';\nimport Timer from './Timer';\nimport Leaderboard from './Leaderboard';\nimport { getRandomWords } from '../data/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  group,\n  onComplete,\n  scores\n}) => {\n  _s();\n  const [gameState, setGameState] = useState({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null\n  });\n  const [showPreview, setShowPreview] = useState(true);\n\n  // 初始化游戏\n  useEffect(() => {\n    const words = getRandomWords();\n    const cards = [];\n    words.forEach((pair, index) => {\n      cards.push({\n        id: index * 2,\n        content: pair.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false\n      }, {\n        id: index * 2 + 1,\n        content: pair.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false\n      });\n    });\n\n    // 随机排序卡片\n    const shuffledCards = [...cards].sort(() => Math.random() - 0.5);\n    setGameState(prev => ({\n      ...prev,\n      cards: shuffledCards,\n      startTime: null,\n      endTime: null,\n      isGameComplete: false\n    }));\n\n    // 显示预览\n    setTimeout(() => {\n      setShowPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        startTime: Date.now()\n      }));\n    }, 10000); // 10秒预览时间\n  }, []);\n\n  // 处理卡片点击\n  const handleCardClick = clickedCard => {\n    if (showPreview || gameState.isGameComplete || clickedCard.isFlipped || clickedCard.isMatched || gameState.flippedCards.length >= 2) {\n      return;\n    }\n    const updatedCards = gameState.cards.map(card => card.id === clickedCard.id ? {\n      ...card,\n      isFlipped: true\n    } : card);\n    const flippedCards = [...gameState.flippedCards, clickedCard];\n    if (flippedCards.length === 2) {\n      if (flippedCards[0].pairId === flippedCards[1].pairId && flippedCards[0].type !== flippedCards[1].type) {\n        // 匹配成功\n        updatedCards.forEach(card => {\n          if (card.pairId === flippedCards[0].pairId) {\n            card.isMatched = true;\n          }\n        });\n      }\n\n      // 检查是否所有卡片都匹配完成\n      const isAllMatched = updatedCards.every(card => card.isMatched);\n      if (isAllMatched) {\n        const endTime = Date.now();\n        const timeTaken = Math.round((endTime - (gameState.startTime || 0)) / 1000);\n        setGameState(prev => ({\n          ...prev,\n          cards: updatedCards,\n          flippedCards: [],\n          isGameComplete: true,\n          endTime\n        }));\n        onComplete(timeTaken);\n        return;\n      }\n\n      // 1秒后翻回未匹配的卡片\n      setTimeout(() => {\n        setGameState(prev => ({\n          ...prev,\n          cards: prev.cards.map(card => !card.isMatched ? {\n            ...card,\n            isFlipped: false\n          } : card),\n          flippedCards: []\n        }));\n      }, 1000);\n    }\n    setGameState(prev => ({\n      ...prev,\n      cards: updatedCards,\n      flippedCards\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: [\"\\u7B2C \", group, \" \\u7EC4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          isRunning: !showPreview && !gameState.isGameComplete,\n          startTime: gameState.startTime,\n          endTime: gameState.endTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-4 mb-8\",\n        children: gameState.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          isFlipped: card.isFlipped || showPreview,\n          isDisabled: showPreview || gameState.isGameComplete,\n          onClick: () => handleCardClick(card)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), gameState.isGameComplete && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n          scores: scores,\n          groupNumber: group,\n          showGroupColumn: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"D11aRaM9Sat83v6r8Co600F3uOM=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","motion","Card","Timer","Leaderboard","getRandomWords","jsxDEV","_jsxDEV","Game","group","onComplete","scores","_s","gameState","setGameState","cards","flippedCards","isGameComplete","startTime","endTime","showPreview","setShowPreview","words","forEach","pair","index","push","id","content","english","type","pairId","isFlipped","isMatched","chinese","shuffledCards","sort","Math","random","prev","setTimeout","Date","now","handleCardClick","clickedCard","length","updatedCards","map","card","isAllMatched","every","timeTaken","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isRunning","isDisabled","onClick","div","initial","opacity","y","animate","transition","duration","groupNumber","showGroupColumn","_c","$RefreshReg$"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Card as CardType, GameState, Score } from '../types';\nimport Card from './Card';\nimport Timer from './Timer';\nimport Leaderboard from './Leaderboard';\nimport { getRandomWords } from '../data/words';\n\ninterface GameProps {\n  group: number;\n  onComplete: (time: number) => void;\n  scores: Score[];\n}\n\nconst Game: React.FC<GameProps> = ({ group, onComplete, scores }) => {\n  const [gameState, setGameState] = useState<GameState>({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null\n  });\n  const [showPreview, setShowPreview] = useState(true);\n\n  // 初始化游戏\n  useEffect(() => {\n    const words = getRandomWords();\n    const cards: CardType[] = [];\n    \n    words.forEach((pair, index) => {\n      cards.push(\n        {\n          id: index * 2,\n          content: pair.english,\n          type: 'english',\n          pairId: index,\n          isFlipped: false,\n          isMatched: false\n        },\n        {\n          id: index * 2 + 1,\n          content: pair.chinese,\n          type: 'chinese',\n          pairId: index,\n          isFlipped: false,\n          isMatched: false\n        }\n      );\n    });\n\n    // 随机排序卡片\n    const shuffledCards = [...cards].sort(() => Math.random() - 0.5);\n    setGameState(prev => ({\n      ...prev,\n      cards: shuffledCards,\n      startTime: null,\n      endTime: null,\n      isGameComplete: false\n    }));\n\n    // 显示预览\n    setTimeout(() => {\n      setShowPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        startTime: Date.now()\n      }));\n    }, 10000); // 10秒预览时间\n  }, []);\n\n  // 处理卡片点击\n  const handleCardClick = (clickedCard: CardType) => {\n    if (\n      showPreview ||\n      gameState.isGameComplete ||\n      clickedCard.isFlipped ||\n      clickedCard.isMatched ||\n      gameState.flippedCards.length >= 2\n    ) {\n      return;\n    }\n\n    const updatedCards = gameState.cards.map(card =>\n      card.id === clickedCard.id ? { ...card, isFlipped: true } : card\n    );\n\n    const flippedCards = [...gameState.flippedCards, clickedCard];\n\n    if (flippedCards.length === 2) {\n      if (\n        flippedCards[0].pairId === flippedCards[1].pairId &&\n        flippedCards[0].type !== flippedCards[1].type\n      ) {\n        // 匹配成功\n        updatedCards.forEach(card => {\n          if (card.pairId === flippedCards[0].pairId) {\n            card.isMatched = true;\n          }\n        });\n      }\n\n      // 检查是否所有卡片都匹配完成\n      const isAllMatched = updatedCards.every(card => card.isMatched);\n      if (isAllMatched) {\n        const endTime = Date.now();\n        const timeTaken = Math.round((endTime - (gameState.startTime || 0)) / 1000);\n        setGameState(prev => ({\n          ...prev,\n          cards: updatedCards,\n          flippedCards: [],\n          isGameComplete: true,\n          endTime\n        }));\n        onComplete(timeTaken);\n        return;\n      }\n\n      // 1秒后翻回未匹配的卡片\n      setTimeout(() => {\n        setGameState(prev => ({\n          ...prev,\n          cards: prev.cards.map(card =>\n            !card.isMatched ? { ...card, isFlipped: false } : card\n          ),\n          flippedCards: []\n        }));\n      }, 1000);\n    }\n\n    setGameState(prev => ({\n      ...prev,\n      cards: updatedCards,\n      flippedCards\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-bold text-blue-600\">第 {group} 组</h1>\n          <Timer\n            isRunning={!showPreview && !gameState.isGameComplete}\n            startTime={gameState.startTime}\n            endTime={gameState.endTime}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-4 mb-8\">\n          {gameState.cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              isFlipped={card.isFlipped || showPreview}\n              isDisabled={showPreview || gameState.isGameComplete}\n              onClick={() => handleCardClick(card)}\n            />\n          ))}\n        </div>\n\n        {gameState.isGameComplete && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Leaderboard \n              scores={scores} \n              groupNumber={group}\n              showGroupColumn={false}\n            />\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}