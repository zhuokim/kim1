{"ast":null,"code":"var _jsxFileName = \"/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport Card from './Card';\nimport Timer from './Timer';\nimport GroupSelection from './GroupSelection';\nimport Leaderboard from './Leaderboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PREVIEW_DURATION = 10; // 预览时间（秒）\nconst STORAGE_KEY = 'memory-game-data';\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null\n  });\n  const [gameData, setGameData] = useState({\n    currentGroup: null,\n    scores: [],\n    isGroupSelectionOpen: true\n  });\n  const [isPreview, setIsPreview] = useState(true);\n  const [previewCountdown, setPreviewCountdown] = useState(PREVIEW_DURATION);\n\n  // 从本地存储加载游戏数据\n  useEffect(() => {\n    const savedData = localStorage.getItem(STORAGE_KEY);\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setGameData(prevData => ({\n        ...prevData,\n        scores: parsedData.scores || []\n      }));\n    }\n  }, []);\n\n  // 保存游戏数据到本地存储\n  const saveGameData = newScore => {\n    const updatedScores = newScore ? [...gameData.scores, newScore] : gameData.scores;\n    const dataToSave = {\n      ...gameData,\n      scores: updatedScores\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    setGameData(prevData => ({\n      ...prevData,\n      scores: updatedScores\n    }));\n  };\n  const handleGroupSelect = group => {\n    setGameData(prevData => ({\n      ...prevData,\n      currentGroup: group,\n      isGroupSelectionOpen: false\n    }));\n    initializeGame();\n  };\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: true,\n        // 初始状态设为翻开\n        isMatched: false\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: true,\n        // 初始状态设为翻开\n        isMatched: false\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: null,\n      // 预览阶段不开始计时\n      endTime: null\n    });\n    setIsPreview(true);\n    setPreviewCountdown(PREVIEW_DURATION);\n  };\n\n  // 处理预览倒计时\n  useEffect(() => {\n    if (isPreview && previewCountdown > 0) {\n      const timer = setInterval(() => {\n        setPreviewCountdown(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n    if (isPreview && previewCountdown === 0) {\n      // 预览结束，将所有卡片翻回去，开始游戏\n      setIsPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        cards: prev.cards.map(card => ({\n          ...card,\n          isFlipped: false\n        })),\n        startTime: Date.now() // 开始计时\n      }));\n    }\n  }, [isPreview, previewCountdown]);\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  const handleCardClick = clickedCard => {\n    if (isPreview ||\n    // 预览阶段不允许点击\n    gameState.flippedCards.length === 2 || clickedCard.isFlipped || clickedCard.isMatched) {\n      return;\n    }\n    const newCards = gameState.cards.map(card => card.id === clickedCard.id ? {\n      ...card,\n      isFlipped: true\n    } : card);\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n    setGameState(prev => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards\n    }));\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && firstCard.type !== secondCard.type;\n      if (isMatch) {\n        const matchedCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n          ...card,\n          isMatched: true\n        } : card);\n        const isGameComplete = matchedCards.every(card => card.isMatched);\n        const endTime = isGameComplete ? Date.now() : null;\n        setGameState(prev => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime\n        }));\n        if (isGameComplete && endTime && gameState.startTime && gameData.currentGroup) {\n          const newScore = {\n            group: gameData.currentGroup,\n            time: Math.floor((endTime - gameState.startTime) / 1000),\n            date: new Date().toISOString()\n          };\n          saveGameData(newScore);\n        }\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n            ...card,\n            isFlipped: false\n          } : card);\n          setGameState(prev => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: []\n          }));\n        }, 1000);\n      }\n    }\n  };\n  const handleRestart = () => {\n    setGameData(prevData => ({\n      ...prevData,\n      isGroupSelectionOpen: true,\n      currentGroup: null\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: gameData.isGroupSelectionOpen ? /*#__PURE__*/_jsxDEV(GroupSelection, {\n        onSelect: handleGroupSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4\",\n            children: [!isPreview && /*#__PURE__*/_jsxDEV(Timer, {\n              startTime: gameState.startTime,\n              endTime: gameState.endTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold text-blue-600\",\n              children: [\"\\u7B2C \", gameData.currentGroup, \" \\u7EC4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), isPreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-blue-600\",\n            children: [\"\\u9884\\u89C8\\u65F6\\u95F4\\uFF1A\", previewCountdown, \" \\u79D2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRestart,\n            className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-colors duration-200 transform hover:scale-105 focus:outline-none  focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\",\n            children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\",\n          children: gameState.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n            card: card,\n            onClick: () => handleCardClick(card)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n          scores: gameData.scores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), gameState.isGameComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-3xl font-bold mb-4 text-blue-600\",\n              children: \"\\u606D\\u559C\\u4F60\\u5B8C\\u6210\\u6E38\\u620F\\uFF01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl mb-6 text-gray-700\",\n              children: [\"\\u7528\\u65F6\\uFF1A\", Math.floor((gameState.endTime - gameState.startTime) / 1000), \" \\u79D2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRestart,\n              className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-all duration-200 transform hover:scale-105\",\n              children: \"\\u518D\\u73A9\\u4E00\\u6B21\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"RO1RIprSW5z4+rugPwd9LlflUC0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","getRandomWords","Card","Timer","GroupSelection","Leaderboard","jsxDEV","_jsxDEV","Fragment","_Fragment","PREVIEW_DURATION","STORAGE_KEY","Game","_s","gameState","setGameState","cards","flippedCards","isGameComplete","startTime","endTime","gameData","setGameData","currentGroup","scores","isGroupSelectionOpen","isPreview","setIsPreview","previewCountdown","setPreviewCountdown","savedData","localStorage","getItem","parsedData","JSON","parse","prevData","saveGameData","newScore","updatedScores","dataToSave","setItem","stringify","handleGroupSelect","group","initializeGame","selectedWords","forEach","word","index","push","id","content","english","type","pairId","isFlipped","isMatched","chinese","shuffledCards","sort","Math","random","timer","setInterval","prev","clearInterval","map","card","Date","now","handleCardClick","clickedCard","length","newCards","newFlippedCards","firstCard","secondCard","isMatch","matchedCards","every","time","floor","date","toISOString","setTimeout","resetCards","handleRestart","className","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport { Card as CardType, GameState, Score, GameData } from '../types';\nimport Card from './Card';\nimport Timer from './Timer';\nimport GroupSelection from './GroupSelection';\nimport Leaderboard from './Leaderboard';\n\nconst PREVIEW_DURATION = 10; // 预览时间（秒）\nconst STORAGE_KEY = 'memory-game-data';\n\nconst Game: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null,\n  });\n\n  const [gameData, setGameData] = useState<GameData>({\n    currentGroup: null,\n    scores: [],\n    isGroupSelectionOpen: true,\n  });\n\n  const [isPreview, setIsPreview] = useState(true);\n  const [previewCountdown, setPreviewCountdown] = useState(PREVIEW_DURATION);\n\n  // 从本地存储加载游戏数据\n  useEffect(() => {\n    const savedData = localStorage.getItem(STORAGE_KEY);\n    if (savedData) {\n      const parsedData = JSON.parse(savedData);\n      setGameData(prevData => ({\n        ...prevData,\n        scores: parsedData.scores || [],\n      }));\n    }\n  }, []);\n\n  // 保存游戏数据到本地存储\n  const saveGameData = (newScore?: Score) => {\n    const updatedScores = newScore \n      ? [...gameData.scores, newScore]\n      : gameData.scores;\n\n    const dataToSave = {\n      ...gameData,\n      scores: updatedScores,\n    };\n\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));\n    setGameData(prevData => ({\n      ...prevData,\n      scores: updatedScores,\n    }));\n  };\n\n  const handleGroupSelect = (group: number) => {\n    setGameData(prevData => ({\n      ...prevData,\n      currentGroup: group,\n      isGroupSelectionOpen: false,\n    }));\n    initializeGame();\n  };\n\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards: CardType[] = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: true, // 初始状态设为翻开\n        isMatched: false,\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: true, // 初始状态设为翻开\n        isMatched: false,\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: null, // 预览阶段不开始计时\n      endTime: null,\n    });\n    setIsPreview(true);\n    setPreviewCountdown(PREVIEW_DURATION);\n  };\n\n  // 处理预览倒计时\n  useEffect(() => {\n    if (isPreview && previewCountdown > 0) {\n      const timer = setInterval(() => {\n        setPreviewCountdown(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n\n    if (isPreview && previewCountdown === 0) {\n      // 预览结束，将所有卡片翻回去，开始游戏\n      setIsPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        cards: prev.cards.map(card => ({ ...card, isFlipped: false })),\n        startTime: Date.now(), // 开始计时\n      }));\n    }\n  }, [isPreview, previewCountdown]);\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const handleCardClick = (clickedCard: CardType) => {\n    if (\n      isPreview || // 预览阶段不允许点击\n      gameState.flippedCards.length === 2 ||\n      clickedCard.isFlipped ||\n      clickedCard.isMatched\n    ) {\n      return;\n    }\n\n    const newCards = gameState.cards.map((card) =>\n      card.id === clickedCard.id ? { ...card, isFlipped: true } : card\n    );\n\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n\n    setGameState((prev) => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards,\n    }));\n\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && \n                     firstCard.type !== secondCard.type;\n\n      if (isMatch) {\n        const matchedCards = newCards.map((card) =>\n          card.id === firstCard.id || card.id === secondCard.id\n            ? { ...card, isMatched: true }\n            : card\n        );\n\n        const isGameComplete = matchedCards.every((card) => card.isMatched);\n        const endTime = isGameComplete ? Date.now() : null;\n\n        setGameState((prev) => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime,\n        }));\n\n        if (isGameComplete && endTime && gameState.startTime && gameData.currentGroup) {\n          const newScore: Score = {\n            group: gameData.currentGroup,\n            time: Math.floor((endTime - gameState.startTime) / 1000),\n            date: new Date().toISOString(),\n          };\n          saveGameData(newScore);\n        }\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map((card) =>\n            card.id === firstCard.id || card.id === secondCard.id\n              ? { ...card, isFlipped: false }\n              : card\n          );\n\n          setGameState((prev) => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: [],\n          }));\n        }, 1000);\n      }\n    }\n  };\n\n  const handleRestart = () => {\n    setGameData(prevData => ({\n      ...prevData,\n      isGroupSelectionOpen: true,\n      currentGroup: null,\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        {gameData.isGroupSelectionOpen ? (\n          <GroupSelection onSelect={handleGroupSelect} />\n        ) : (\n          <>\n            <div className=\"flex justify-between items-center mb-8\">\n              <div className=\"flex items-center gap-4\">\n                {!isPreview && (\n                  <Timer\n                    startTime={gameState.startTime}\n                    endTime={gameState.endTime}\n                  />\n                )}\n                <div className=\"text-lg font-semibold text-blue-600\">\n                  第 {gameData.currentGroup} 组\n                </div>\n              </div>\n              {isPreview ? (\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  预览时间：{previewCountdown} 秒\n                </div>\n              ) : (\n                <button\n                  onClick={handleRestart}\n                  className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n                    transition-colors duration-200 transform hover:scale-105 focus:outline-none \n                    focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\"\n                >\n                  重新开始\n                </button>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n              {gameState.cards.map((card) => (\n                <Card\n                  key={card.id}\n                  card={card}\n                  onClick={() => handleCardClick(card)}\n                />\n              ))}\n            </div>\n\n            <Leaderboard scores={gameData.scores} />\n\n            {gameState.isGameComplete && (\n              <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n                <div className=\"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\">\n                  <h2 className=\"text-3xl font-bold mb-4 text-blue-600\">恭喜你完成游戏！</h2>\n                  <p className=\"text-xl mb-6 text-gray-700\">\n                    用时：{Math.floor((gameState.endTime! - gameState.startTime!) / 1000)} 秒\n                  </p>\n                  <button\n                    onClick={handleRestart}\n                    className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n                      transition-all duration-200 transform hover:scale-105\"\n                  >\n                    再玩一次\n                  </button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}