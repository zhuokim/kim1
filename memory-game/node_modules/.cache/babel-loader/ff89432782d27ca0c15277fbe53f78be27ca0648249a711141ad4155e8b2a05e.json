{"ast":null,"code":"var _jsxFileName = \"/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport Card from './Card';\nimport Timer from './Timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null\n  });\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: Date.now(),\n      endTime: null\n    });\n  };\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  const handleCardClick = clickedCard => {\n    if (gameState.flippedCards.length === 2 || clickedCard.isFlipped || clickedCard.isMatched) {\n      return;\n    }\n    const newCards = gameState.cards.map(card => card.id === clickedCard.id ? {\n      ...card,\n      isFlipped: true\n    } : card);\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n    setGameState(prev => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards\n    }));\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && firstCard.type !== secondCard.type;\n      if (isMatch) {\n        const matchedCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n          ...card,\n          isMatched: true\n        } : card);\n        const isGameComplete = matchedCards.every(card => card.isMatched);\n        setGameState(prev => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime: isGameComplete ? Date.now() : null\n        }));\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map(card => card.id === firstCard.id || card.id === secondCard.id ? {\n            ...card,\n            isFlipped: false\n          } : card);\n          setGameState(prev => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: []\n          }));\n        }, 1000);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          startTime: gameState.startTime,\n          endTime: gameState.endTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initializeGame,\n          className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-colors duration-200 transform hover:scale-105 focus:outline-none  focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\",\n          children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\",\n        children: gameState.cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onClick: () => handleCardClick(card)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), gameState.isGameComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl font-bold mb-4 text-blue-600\",\n            children: \"\\u606D\\u559C\\u4F60\\u5B8C\\u6210\\u6E38\\u620F\\uFF01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-6 text-gray-700\",\n            children: [\"\\u7528\\u65F6\\uFF1A\", Math.floor((gameState.endTime - gameState.startTime) / 1000), \" \\u79D2\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: initializeGame,\n            className: \"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600  transition-all duration-200 transform hover:scale-105\",\n            children: \"\\u518D\\u73A9\\u4E00\\u6B21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"F4c+jIGor7JJ/028YUZ3KUyvRL4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","getRandomWords","Card","Timer","jsxDEV","_jsxDEV","Game","_s","gameState","setGameState","cards","flippedCards","isGameComplete","startTime","endTime","initializeGame","selectedWords","forEach","word","index","push","id","content","english","type","pairId","isFlipped","isMatched","chinese","shuffledCards","sort","Math","random","Date","now","handleCardClick","clickedCard","length","newCards","map","card","newFlippedCards","prev","firstCard","secondCard","isMatch","matchedCards","every","setTimeout","resetCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","floor","_c","$RefreshReg$"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport { Card as CardType, GameState } from '../types';\nimport Card from './Card';\nimport Timer from './Timer';\n\nconst Game: React.FC = () => {\n  const [gameState, setGameState] = useState<GameState>({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null,\n  });\n\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards: CardType[] = [];\n\n    // 为每个单词创建一对卡片（英文和中文）\n    selectedWords.forEach((word, index) => {\n      // 英文卡片\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false,\n      });\n      // 中文卡片\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: false,\n        isMatched: false,\n      });\n    });\n\n    // 随机打乱卡片顺序\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: Date.now(),\n      endTime: null,\n    });\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const handleCardClick = (clickedCard: CardType) => {\n    if (\n      gameState.flippedCards.length === 2 ||\n      clickedCard.isFlipped ||\n      clickedCard.isMatched\n    ) {\n      return;\n    }\n\n    const newCards = gameState.cards.map((card) =>\n      card.id === clickedCard.id ? { ...card, isFlipped: true } : card\n    );\n\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n\n    setGameState((prev) => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards,\n    }));\n\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && \n                     firstCard.type !== secondCard.type;\n\n      if (isMatch) {\n        const matchedCards = newCards.map((card) =>\n          card.id === firstCard.id || card.id === secondCard.id\n            ? { ...card, isMatched: true }\n            : card\n        );\n\n        const isGameComplete = matchedCards.every((card) => card.isMatched);\n\n        setGameState((prev) => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime: isGameComplete ? Date.now() : null,\n        }));\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map((card) =>\n            card.id === firstCard.id || card.id === secondCard.id\n              ? { ...card, isFlipped: false }\n              : card\n          );\n\n          setGameState((prev) => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: [],\n          }));\n        }, 1000);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <Timer\n            startTime={gameState.startTime}\n            endTime={gameState.endTime}\n          />\n          <button\n            onClick={initializeGame}\n            className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n              transition-colors duration-200 transform hover:scale-105 focus:outline-none \n              focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 shadow-lg\"\n          >\n            重新开始\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n          {gameState.cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              onClick={() => handleCardClick(card)}\n            />\n          ))}\n        </div>\n\n        {gameState.isGameComplete && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n            <div className=\"bg-white p-8 rounded-lg text-center transform transition-all duration-300 scale-100\">\n              <h2 className=\"text-3xl font-bold mb-4 text-blue-600\">恭喜你完成游戏！</h2>\n              <p className=\"text-xl mb-6 text-gray-700\">\n                用时：{Math.floor((gameState.endTime! - gameState.startTime!) / 1000)} 秒\n              </p>\n              <button\n                onClick={initializeGame}\n                className=\"px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 \n                  transition-all duration-200 transform hover:scale-105\"\n              >\n                再玩一次\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}