{"ast":null,"code":"var _jsxFileName = \"/Users/jz/Documents/resistance-begingame/memory-game/src/components/Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  startTime,\n  endTime\n}) => {\n  _s();\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let interval;\n    if (startTime && !endTime) {\n      interval = setInterval(() => {\n        setTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    } else if (endTime) {\n      setTime(Math.floor((endTime - startTime) / 1000));\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [startTime, endTime]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-2xl font-bold text-gray-800\",\n    children: formatTime(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Timer","startTime","endTime","_s","time","setTime","interval","setInterval","Math","floor","Date","now","clearInterval","formatTime","seconds","minutes","remainingSeconds","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Timer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface TimerProps {\n  startTime: number | null;\n  endTime: number | null;\n}\n\nconst Timer: React.FC<TimerProps> = ({ startTime, endTime }) => {\n  const [time, setTime] = useState<number>(0);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (startTime && !endTime) {\n      interval = setInterval(() => {\n        setTime(Math.floor((Date.now() - startTime) / 1000));\n      }, 1000);\n    } else if (endTime) {\n      setTime(Math.floor((endTime - startTime!) / 1000));\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [startTime, endTime]);\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"text-2xl font-bold text-gray-800\">\n      {formatTime(time)}\n    </div>\n  );\n};\n\nexport default Timer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,MAAMC,KAA2B,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,CAAC,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAIU,QAAwB;IAE5B,IAAIL,SAAS,IAAI,CAACC,OAAO,EAAE;MACzBI,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BF,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGV,SAAS,IAAI,IAAI,CAAC,CAAC;MACtD,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIC,OAAO,EAAE;MAClBG,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC,CAACP,OAAO,GAAGD,SAAU,IAAI,IAAI,CAAC,CAAC;IACpD;IAEA,OAAO,MAAM;MACX,IAAIK,QAAQ,EAAE;QACZM,aAAa,CAACN,QAAQ,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,CAACL,SAAS,EAAEC,OAAO,CAAC,CAAC;EAExB,MAAMW,UAAU,GAAIC,OAAe,IAAa;IAC9C,MAAMC,OAAO,GAAGP,IAAI,CAACC,KAAK,CAACK,OAAO,GAAG,EAAE,CAAC;IACxC,MAAME,gBAAgB,GAAGF,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,IAAIC,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACrE,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,kCAAkC;IAAAC,QAAA,EAC9CP,UAAU,CAACT,IAAI;EAAC;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCIH,KAA2B;AAAAyB,EAAA,GAA3BzB,KAA2B;AAkCjC,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}