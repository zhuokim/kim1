{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getRandomWords}from'../data/words';import Card from'./Card';import Timer from'./Timer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PREVIEW_DURATION=10;// Preview duration in seconds\nconst Game=_ref=>{let{group,onComplete}=_ref;const[gameState,setGameState]=useState({cards:[],flippedCards:[],isGameComplete:false,startTime:null,endTime:null});const[isPreview,setIsPreview]=useState(true);const[previewCountdown,setPreviewCountdown]=useState(PREVIEW_DURATION);const initializeGame=()=>{const selectedWords=getRandomWords(8);const cards=[];// Create a pair of cards for each word (English and Chinese)\nselectedWords.forEach((word,index)=>{// English card\ncards.push({id:index*2,content:word.english,type:'english',pairId:index,isFlipped:true,isMatched:false});// Chinese card\ncards.push({id:index*2+1,content:word.chinese,type:'chinese',pairId:index,isFlipped:true,isMatched:false});});// Shuffle cards\nconst shuffledCards=cards.sort(()=>Math.random()-0.5);setGameState({cards:shuffledCards,flippedCards:[],isGameComplete:false,startTime:null,endTime:null});setIsPreview(true);setPreviewCountdown(PREVIEW_DURATION);};useEffect(()=>{if(isPreview&&previewCountdown>0){const timer=setInterval(()=>{setPreviewCountdown(prev=>prev-1);},1000);return()=>clearInterval(timer);}if(isPreview&&previewCountdown===0){setIsPreview(false);setGameState(prev=>({...prev,cards:prev.cards.map(card=>({...card,isFlipped:false})),startTime:Date.now()}));}},[isPreview,previewCountdown]);useEffect(()=>{initializeGame();},[]);const handleCardClick=clickedCard=>{if(isPreview||gameState.flippedCards.length===2||clickedCard.isFlipped||clickedCard.isMatched){return;}const newCards=gameState.cards.map(card=>card.id===clickedCard.id?{...card,isFlipped:true}:card);const newFlippedCards=[...gameState.flippedCards,clickedCard];setGameState(prev=>({...prev,cards:newCards,flippedCards:newFlippedCards}));if(newFlippedCards.length===2){const[firstCard,secondCard]=newFlippedCards;const isMatch=firstCard.pairId===secondCard.pairId&&firstCard.type!==secondCard.type;if(isMatch){const matchedCards=newCards.map(card=>card.id===firstCard.id||card.id===secondCard.id?{...card,isMatched:true}:card);const isGameComplete=matchedCards.every(card=>card.isMatched);const endTime=isGameComplete?Date.now():null;setGameState(prev=>({...prev,cards:matchedCards,flippedCards:[],isGameComplete,endTime}));if(isGameComplete&&endTime&&gameState.startTime){const timeTaken=Math.floor((endTime-gameState.startTime)/1000);onComplete(timeTaken);}}else{setTimeout(()=>{const resetCards=newCards.map(card=>card.id===firstCard.id||card.id===secondCard.id?{...card,isFlipped:false}:card);setGameState(prev=>({...prev,cards:resetCards,flippedCards:[]}));},1000);}}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto px-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[!isPreview&&/*#__PURE__*/_jsx(Timer,{startTime:gameState.startTime,endTime:gameState.endTime}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-semibold text-blue-600\",children:[\"Group \",group]})]}),isPreview?/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:[\"Preview: \",previewCountdown,\"s\"]}):null]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-4 gap-4\",children:gameState.cards.map(card=>/*#__PURE__*/_jsx(Card,{card:card,onClick:()=>handleCardClick(card)},card.id))})]})});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","getRandomWords","Card","Timer","jsx","_jsx","jsxs","_jsxs","PREVIEW_DURATION","Game","_ref","group","onComplete","gameState","setGameState","cards","flippedCards","isGameComplete","startTime","endTime","isPreview","setIsPreview","previewCountdown","setPreviewCountdown","initializeGame","selectedWords","forEach","word","index","push","id","content","english","type","pairId","isFlipped","isMatched","chinese","shuffledCards","sort","Math","random","timer","setInterval","prev","clearInterval","map","card","Date","now","handleCardClick","clickedCard","length","newCards","newFlippedCards","firstCard","secondCard","isMatch","matchedCards","every","timeTaken","floor","setTimeout","resetCards","className","children","onClick"],"sources":["/Users/jz/Documents/resistance-begingame/memory-game/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getRandomWords } from '../data/words';\nimport { Card as CardType, GameState } from '../types';\nimport Card from './Card';\nimport Timer from './Timer';\n\nconst PREVIEW_DURATION = 10; // Preview duration in seconds\n\ninterface GameProps {\n  group: number;\n  onComplete: (time: number) => void;\n}\n\nconst Game: React.FC<GameProps> = ({ group, onComplete }) => {\n  const [gameState, setGameState] = useState<GameState>({\n    cards: [],\n    flippedCards: [],\n    isGameComplete: false,\n    startTime: null,\n    endTime: null,\n  });\n\n  const [isPreview, setIsPreview] = useState(true);\n  const [previewCountdown, setPreviewCountdown] = useState(PREVIEW_DURATION);\n\n  const initializeGame = () => {\n    const selectedWords = getRandomWords(8);\n    const cards: CardType[] = [];\n\n    // Create a pair of cards for each word (English and Chinese)\n    selectedWords.forEach((word, index) => {\n      // English card\n      cards.push({\n        id: index * 2,\n        content: word.english,\n        type: 'english',\n        pairId: index,\n        isFlipped: true,\n        isMatched: false,\n      });\n      // Chinese card\n      cards.push({\n        id: index * 2 + 1,\n        content: word.chinese,\n        type: 'chinese',\n        pairId: index,\n        isFlipped: true,\n        isMatched: false,\n      });\n    });\n\n    // Shuffle cards\n    const shuffledCards = cards.sort(() => Math.random() - 0.5);\n\n    setGameState({\n      cards: shuffledCards,\n      flippedCards: [],\n      isGameComplete: false,\n      startTime: null,\n      endTime: null,\n    });\n    setIsPreview(true);\n    setPreviewCountdown(PREVIEW_DURATION);\n  };\n\n  useEffect(() => {\n    if (isPreview && previewCountdown > 0) {\n      const timer = setInterval(() => {\n        setPreviewCountdown(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n\n    if (isPreview && previewCountdown === 0) {\n      setIsPreview(false);\n      setGameState(prev => ({\n        ...prev,\n        cards: prev.cards.map(card => ({ ...card, isFlipped: false })),\n        startTime: Date.now(),\n      }));\n    }\n  }, [isPreview, previewCountdown]);\n\n  useEffect(() => {\n    initializeGame();\n  }, []);\n\n  const handleCardClick = (clickedCard: CardType) => {\n    if (\n      isPreview ||\n      gameState.flippedCards.length === 2 ||\n      clickedCard.isFlipped ||\n      clickedCard.isMatched\n    ) {\n      return;\n    }\n\n    const newCards = gameState.cards.map((card) =>\n      card.id === clickedCard.id ? { ...card, isFlipped: true } : card\n    );\n\n    const newFlippedCards = [...gameState.flippedCards, clickedCard];\n\n    setGameState((prev) => ({\n      ...prev,\n      cards: newCards,\n      flippedCards: newFlippedCards,\n    }));\n\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      const isMatch = firstCard.pairId === secondCard.pairId && \n                     firstCard.type !== secondCard.type;\n\n      if (isMatch) {\n        const matchedCards = newCards.map((card) =>\n          card.id === firstCard.id || card.id === secondCard.id\n            ? { ...card, isMatched: true }\n            : card\n        );\n\n        const isGameComplete = matchedCards.every((card) => card.isMatched);\n        const endTime = isGameComplete ? Date.now() : null;\n\n        setGameState((prev) => ({\n          ...prev,\n          cards: matchedCards,\n          flippedCards: [],\n          isGameComplete,\n          endTime,\n        }));\n\n        if (isGameComplete && endTime && gameState.startTime) {\n          const timeTaken = Math.floor((endTime - gameState.startTime) / 1000);\n          onComplete(timeTaken);\n        }\n      } else {\n        setTimeout(() => {\n          const resetCards = newCards.map((card) =>\n            card.id === firstCard.id || card.id === secondCard.id\n              ? { ...card, isFlipped: false }\n              : card\n          );\n\n          setGameState((prev) => ({\n            ...prev,\n            cards: resetCards,\n            flippedCards: [],\n          }));\n        }, 1000);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div className=\"flex items-center gap-4\">\n            {!isPreview && (\n              <Timer\n                startTime={gameState.startTime}\n                endTime={gameState.endTime}\n              />\n            )}\n            <div className=\"text-lg font-semibold text-blue-600\">\n              Group {group}\n            </div>\n          </div>\n          {isPreview ? (\n            <div className=\"text-2xl font-bold text-blue-600\">\n              Preview: {previewCountdown}s\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-4\">\n          {gameState.cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              onClick={() => handleCardClick(card)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}